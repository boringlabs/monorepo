// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CounterUpdate extends ethereum.Event {
  get params(): CounterUpdate__Params {
    return new CounterUpdate__Params(this);
  }
}

export class CounterUpdate__Params {
  _event: CounterUpdate;

  constructor(event: CounterUpdate) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Counter extends ethereum.SmartContract {
  static bind(address: Address): Counter {
    return new Counter("Counter", address);
  }

  count(): BigInt {
    let result = super.call("count", "count():(uint256)", []);

    return result[0].toBigInt();
  }

  try_count(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("count", "count():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class IncrementCall extends ethereum.Call {
  get inputs(): IncrementCall__Inputs {
    return new IncrementCall__Inputs(this);
  }

  get outputs(): IncrementCall__Outputs {
    return new IncrementCall__Outputs(this);
  }
}

export class IncrementCall__Inputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }
}

export class IncrementCall__Outputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }
}

export class SetCountCall extends ethereum.Call {
  get inputs(): SetCountCall__Inputs {
    return new SetCountCall__Inputs(this);
  }

  get outputs(): SetCountCall__Outputs {
    return new SetCountCall__Outputs(this);
  }
}

export class SetCountCall__Inputs {
  _call: SetCountCall;

  constructor(call: SetCountCall) {
    this._call = call;
  }

  get newCount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCountCall__Outputs {
  _call: SetCountCall;

  constructor(call: SetCountCall) {
    this._call = call;
  }
}
